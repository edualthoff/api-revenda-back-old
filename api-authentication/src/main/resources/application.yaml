## Front End ##
front:
 server:
  url-auth-verificar: http://localhost:4200/auth/verificar/
  url-auth-recuperar-senha: http://localhost:4200/auth/recuperar/senha/
   
## Server Properties
server:
 #port: 8443
 port: 8083
 error: 
  whitelabel:
   enabled: false
ssl:
  key-alias: selfsigned_localhost_sslserver
  key-password: changeit
  key-store: classpath:ssl-server.jks
  key-store-provider: SUN
  key-store-type: JKS
        
security:
 jwt:
  key-store: classpath:keystore.jks
  key-store-password: y2$=;YMvu4{V8L)z
  key-pair-alias: jwtkeuacess
  key-pair-password: Edu1520d
    
## Banco de Dados App - Postgresql
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring:
 application:
  name: api-authentication
 autoconfigure.exclude: org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration
 jpa.open-in-view: false
 resources:
  add-mappings: false
 jpa:
  # Show or not log for each sql query
  show-sql: true
  open-in-view: false
 mail:
  host: smtp.gmail.com
  port: 465
  username: revendascerta@gmail.com
  password: edu5521d
  properties:
   mail:
    smtp:
     auth: true
     port: 465
     host: smtp.gmail.com
     connectiontimeout: 5000
     timeout: 5000
     writetimeout: 5000
     ssl: 
      enable: true
     starttls:
      required: true
      enable: true
     socketFactory:
      port: 465
      fallback: false
      class: javax.net.ssl.SSLSocketFactory
   # Hibernate Properties
   hibernate:
    dialect: org.hibernate.dialect.PostgreSQLDialect
    # Hibernate ddl auto (create, create-drop, validate, update)
    ddl-auto: update
    show_sql: true
    format_sql: true



## default connection pool
 datasource:
  hikari:
   connectionTimeout: 20000
   maximumPoolSize: 20

## PostgreSQL
 # url: jdbc:postgresql://localhost:5432/db_principal?currentSchema=public&useSSL=false
 # username: postgres
 # password: admin

# Banco de dados APP
primary: 
 datasource:
  url: jdbc:postgresql://localhost:5432/db_principal?currentSchema=public&useSSL=false
  username: postgres
  password: admin
  #driverClassName: org.postgresql.Driver
  initialization-mode: always

# Banco de dados Oauth
oauth:
 datasource:
  url: jdbc:postgresql://localhost:5432/db_servidor?currentSchema=api_servidor&useSSL=false
  username: postgres
  password: admin
  #driverClassName: org.postgresql.Driver
  
api:
  sendreport:
    uri: www.repor.com.br
  version: 2.0

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security.oauth: DEBUG
    org.springframework.security.oauth.boot: DEBUG
